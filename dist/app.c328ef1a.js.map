{"version":3,"sources":["node_modules/@babel/runtime/helpers/defineProperty.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/regenerator-runtime/runtime.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","app.js"],"names":["document","addEventListener","ui","UI","products","Products","setupApp","getProducts","then","displayProducts","Storage","saveProducts","getBagButtons","cartLogic","navIcon","cartBtn","querySelector","closeCartBtn","clearCartBtn","cartDOM","cartOverlay","cartItems","cartTotal","cartContent","productsDOM","cart","buttonsDOM","fetch","result","json","data","console","log","forEach","product","id","label","alc","name","category","price","innerHTML","buttons","querySelectorAll","button","dataset","inCart","find","item","innerText","disabled","event","target","cartItem","getProduct","amount","saveCart","setCartValues","addCartItem","showCart","tempTotal","itemsTotal","map","parseFloat","toFixed","div","createElement","classList","add","appendChild","getCart","populateCart","hideCart","remove","clearCart","contains","removeItem","removeChild","parentElement","addAmount","children","length","filter","getSingleButton","localStorage","setItem","JSON","stringify","parse","getItem","leftInfo","toggle"],"mappings":"ACAA,ACAA,AOAA,ACAA,ACAA,AXAA,AGAA,AEAA,ACAA,AFAA,AIAA,ADAA;ANCA,ACAA,AOAA,ACAA,ACAA,AXAA,AGAA,AEAA,ACAA,AFAA,AIAA,ADAA;ANCA,ACAA,AOAA,ACAA,ACAA,AXAA,AGAA,AEAA,ACAA,AFAA,AGAA;ANCA,ACAA,AOAA,ACAA,ACAA,AXAA,AGAA,AEAA,ACAA,AFAA,AGAA;ANCA,ACAA,AOAA,ACAA,ACAA,AXAA,AGAA,AEAA,ACAA,AFAA,AGAA;ANCA,ACAA,AOAA,ACAA,ACAA,AXAA,AMAA,AFAA,AGAA;ANCA,ACAA,AOAA,ACAA,ACAA,AXAA,AMAA,AFAA,AGAA;ANCA,AQAA,AEAA,AXAA,AMAA,AFAA,AGAA;ANCA,AQAA,AEAA,AXAA,AMAA,AFAA,AGAA;ANCA,AQAA,AEAA,AXAA,AMAA,AFAA,AGAA;ANCA,AQAA,AEAA,AXAA,AMAA,AFAA,AGAA;AECA,AEAA,AXAA,AMAA,AFAA,AGAA;AECA,AEAA,AXAA,AMAA,ACAA;AECA,AEAA,AXAA,AOAA;AECA,AEAA,AXAA,AOAA;AECA,AEAA,AXAA,AOAA;AECA,AEAA,AJAA;AECA,AFAA;AECA,AFAA;AECA,AFAA;AKnBAA,AHoBA,AFAA,QKpBQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,AHoBF,AFAA,MKpBQC,EAAE,GAAG,IAAIC,EAAJ,EAAX;AACA,AHoBF,AFAA,MKpBQC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFkD,CAGlD;AHoBF,AFAA;AKnBEH,AHoBF,AFAA,EKpBEA,EAAE,CAACI,QAAH,GAJkD,CAKlD;AHoBF,AFAA;AKnBEF,AHoBF,AFAA,EKpBEA,QAAQ,CACLG,WADH,GAEGC,IAFH,CAEQ,UAACJ,QAAD,EAAc;AAClBF,AHkBN,AFAA,IKlBMA,EAAE,CAACO,eAAH,CAAmBL,QAAnB;AACAM,AHkBN,AFAA,IKlBMA,OAAO,CAACC,YAAR,CAAqBP,QAArB;AACD,AHkBL,AFAA,GKvBE,EAMGI,IANH,CAMQ,YAAM;AACV,AHiBN,AFAA;AKhBMN,AHiBN,AFAA,IKjBMA,EAAE,CAACU,aAA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":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const ui = new UI();\r\n  const products = new Products();\r\n  //setup app\r\n  ui.setupApp();\r\n  //get all products\r\n  products\r\n    .getProducts()\r\n    .then((products) => {\r\n      ui.displayProducts(products);\r\n      Storage.saveProducts(products);\r\n    })\r\n    .then(() => {\r\n      // setTimeout(ui.getBagButtons, 1000);\r\n      ui.getBagButtons();\r\n      ui.cartLogic();\r\n    });\r\n\r\n  navIcon();\r\n});\r\n\r\n//variables\r\n\r\nconst cartBtn = document.querySelector(\".cart-btn\");\r\nconst closeCartBtn = document.querySelector(\".close-cart\");\r\nconst clearCartBtn = document.querySelector(\".clear-cart\");\r\nconst cartDOM = document.querySelector(\".cart\");\r\nconst cartOverlay = document.querySelector(\".cart-overlay\");\r\nconst cartItems = document.querySelector(\".cart-items\");\r\nconst cartTotal = document.querySelector(\".cart-total\");\r\nconst cartContent = document.querySelector(\".cart-content\");\r\nconst productsDOM = document.querySelector(\".products-center\");\r\n\r\n// cart\r\nlet cart = [];\r\n\r\n//buttons\r\nlet buttonsDOM = [];\r\n//getting the products\r\nclass Products {\r\n  async getProducts() {\r\n    try {\r\n      let result = await fetch(\"https://miserables.herokuapp.com/beertypes/\");\r\n      let data = await result.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n//display products\r\nclass UI {\r\n  displayProducts(products) {\r\n    console.log(products);\r\n    let result = \"\";\r\n    products.forEach((product) => {\r\n      result += `\r\n        <!--product-->\r\n        <article class=\"product\" data-id=${product.id}>\r\n          <div class=\"img-container\">\r\n\r\n            <img src=\"labels/${product.label}\" alt=\"product\" class=\"product-img\"/>\r\n          \r\n            <button class=\"bag-btn\" data-id=${product.id}><i class=\"fas fa-shopping-cart\"></i>add to cart</button>\r\n\r\n            <button class=\"description\">About</button>\r\n\r\n          </div>\r\n          \r\n          <h4 class=\"alc\">Alc.${product.alc}%</h4>\r\n          <h3>${product.name}</h3>\r\n          <h4>${product.category}</h4>\r\n          <h3>dkk${product.price}</h3>\r\n        </article>\r\n        <!--end of single product -->\r\n        `;\r\n    });\r\n    productsDOM.innerHTML = result;\r\n  }\r\n  getBagButtons() {\r\n    const buttons = [...document.querySelectorAll(\".bag-btn\")];\r\n    buttonsDOM = buttons;\r\n    buttons.forEach((button) => {\r\n      let id = button.dataset.id;\r\n      let inCart = cart.find((item) => item.id == id);\r\n      if (inCart) {\r\n        button.innerText = \"In Cart\";\r\n        button.disabled = true;\r\n      }\r\n      button.addEventListener(\"click\", (event) => {\r\n        event.target.innerText = \"In Cart\";\r\n        event.target.disabled = true;\r\n        // get product from products\r\n        let cartItem = { ...Storage.getProduct(id), amount: 1 };\r\n        // add product to the cart\r\n        cart = [...cart, cartItem];\r\n        // save the cart in local storage\r\n        Storage.saveCart(cart);\r\n        // set cart values\r\n        this.setCartValues(cart);\r\n        // display cart item\r\n        this.addCartItem(cartItem);\r\n        // show the cart\r\n        this.showCart();\r\n      });\r\n    });\r\n  }\r\n  setCartValues(cart) {\r\n    let tempTotal = 0;\r\n    let itemsTotal = 0;\r\n    cart.map((item) => {\r\n      tempTotal += item.price * item.amount;\r\n      itemsTotal += item.amount;\r\n    });\r\n    cartTotal.innerText = parseFloat(tempTotal.toFixed(2));\r\n    cartItems.innerText = itemsTotal;\r\n  }\r\n  addCartItem(item) {\r\n    const div = document.createElement(\"div\");\r\n    div.classList.add(\"cart-item\");\r\n    div.innerHTML = `\r\n<img src=${item.label} alt=\"product\" />\r\n<div class=\"cart-text\">\r\n  <h4>${item.name}</h4>\r\n  <h5>dkk${item.alc}</h5>\r\n  <span class=\"remove-item\" data-id=${item.id}>Remove</span>\r\n</div>\r\n<div class=\"arrows\">\r\n  <i class=\"fas fa-chevron-up\" data-id=${item.id}></i>\r\n  <p class=\"item-amount\">${item.amount}</p>\r\n  <i class=\"fas fa-chevron-down\" data-id=${item.id}></i>\r\n</div>`;\r\n    cartContent.appendChild(div);\r\n    console.log(cartContent);\r\n  }\r\n  showCart() {\r\n    cartOverlay.classList.add(\"transparentBcg\");\r\n    cartDOM.classList.add(\"showCart\");\r\n  }\r\n  setupApp() {\r\n    cart = Storage.getCart();\r\n    this.setCartValues(cart);\r\n    this.populateCart(cart);\r\n    cartBtn.addEventListener(\"click\", this.showCart);\r\n    closeCartBtn.addEventListener(\"click\", this.hideCart);\r\n  }\r\n  populateCart(cart) {\r\n    cart.forEach((item) => this.addCartItem(item));\r\n  }\r\n  hideCart() {\r\n    cartOverlay.classList.remove(\"transparentBcg\");\r\n    cartDOM.classList.remove(\"showCart\");\r\n  }\r\n  cartLogic() {\r\n    // clear cart button\r\n    clearCartBtn.addEventListener(\"click\", () => {\r\n      this.clearCart();\r\n    });\r\n    //cart functionality Delete\r\n    cartContent.addEventListener(\"click\", (event) => {\r\n      console.log(event.target);\r\n      if (event.target.classList.contains(\"remove-item\")) {\r\n        let removeItem = event.target;\r\n        let id = removeItem.dataset.id;\r\n        cartContent.removeChild(removeItem.parentElement.parentElement);\r\n        this.removeItem(id);\r\n      } else if (event.target.classList.contains(\"fa-chevron-up\")) {\r\n        let addAmount = event.target;\r\n        let id = addAmount.dataset.id;\r\n      }\r\n    });\r\n  }\r\n  clearCart() {\r\n    let cartItems = cart.map((item) => item.id);\r\n    cartItems.forEach((id) => this.removeItem(id));\r\n\r\n    while (cartContent.children.length > 0) {\r\n      cartContent.removeChild(cartContent.children[0]);\r\n    }\r\n    this.hideCart();\r\n  }\r\n  removeItem(id) {\r\n    //remove cart item if the id is not equal to this\r\n    cart = cart.filter((item) => item.id !== id);\r\n    this.setCartValues(cart);\r\n    Storage.saveCart(cart);\r\n    let button = this.getSingleButton(id);\r\n    button.disabled = false;\r\n    button.innerHTML = `<i class=\"fas fa-shopping-cart\"></i>add to cart`;\r\n  }\r\n  getSingleButton(id) {\r\n    return buttonsDOM.find((button) => dataset.id === id);\r\n  }\r\n}\r\n//local storage\r\nclass Storage {\r\n  static saveProducts(products) {\r\n    localStorage.setItem(\"products\", JSON.stringify(products));\r\n  }\r\n  static getProduct(id) {\r\n    let products = JSON.parse(localStorage.getItem(\"products\"));\r\n    return products.find((item) => item.id === id);\r\n  }\r\n  static saveCart(cart) {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n  static getCart() {\r\n    return localStorage.getItem(\"cart\")\r\n      ? JSON.parse(localStorage.getItem(\"cart\"))\r\n      : [];\r\n  }\r\n}\r\n\r\nfunction navIcon() {\r\n  const navIcon = document.querySelector(\".navIcon\");\r\n  navIcon.addEventListener(\"click\", function () {\r\n    const leftInfo = document.querySelector(\"#statusLeft\");\r\n    leftInfo.classList.toggle(\"statusLeftAnim\");\r\n\r\n    navIcon.classList.toggle(\"statusLeftAnim\");\r\n    if (navIcon.classList.contains(\"statusLeftAnim\")) {\r\n      navIcon.innerHTML = \"&times;\";\r\n    } else {\r\n      navIcon.innerHTML = \"&#9776;\";\r\n    }\r\n  });\r\n}\r\n"]}